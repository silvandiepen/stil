@mixin section-navigation() {
  @if export($output, "section.navigation") {
    $navigation: settings($settings, "define.navigation.class");
    $header: settings($settings, "define.header.class");

    #{$navigation} {
      position: relative;
      display: flex;

      &.center {
        justify-content: center;
        align-items: center;
      }

      &.align-right {
        ul ul {
          right: 0;
        }
      }
      &.align-right {
        ul ul {
          left: 0;
        }
      }
      &.align-center {
        ul ul {
          left: 50%;
          transform: translateX(-50%);
        }
      }
      ul {
        display: flex;
        background-color: inherit;
        @media #{breakpoint('small',only)} {
          flex-direction: column;
        }
        ul {
          position: absolute;
          border: 2px solid var(--accent);
          background-color: var(--current);
          border-radius: value(border-radius);
          display: none;
          top: 100%;
          @media #{breakpoint('small',only)} {
            flex-direction: column;
          }
          &::before {
            content: "";
            width: 1em;
            height: 1em;
            background-color: var(--accent);
            display: block;
            position: absolute;
            top: 0;
            left: 50%;
            border-top-left-radius: value(border-radius);
            transform: translateX(-50%) translateY(-50%) rotate(45deg);
            clip-path: polygon(0 0, 0 100%, 100% 0%);
            border: 2px solid var(--accent);
            background-color: var(--current);
          }
          li {
            a {
              padding: calc(#{value(space)} / 4) calc(#{value(space)} / 2);
            }
            & + li {
              @media #{breakpoint('medium')} {
                margin-left: calc((#{value(space)} / 2) * -1);
              }
              @media #{breakpoint('small',only)} {
                margin-top: calc((#{value(space)}) * -1);
              }
            }
          }
        }
        li:hover ul,
        li:focus ul,
        li:focus-within ul {
          display: flex;
        }
      }
      li {
        position: relative;
      }
      li,
      li a {
        padding: calc(#{value(space)} / 2);
      }
      li a::before {
        width: 100%;
        height: 100%;
      }
      a:hover {
        text-decoration: none;
      }
      a {
        padding: value(space);
        text-decoration: none;
        position: relative;
        color: currentColor;
        display: block;

        span {
          position: relative;
          z-index: 2;
        }
        &::before {
          content: "";
          display: block;
          z-index: 1;
          position: absolute;
          left: 50%;
          width: calc(100% - #{value(space)});
          height: calc(100% - #{value(space)});
          background-color: var(--sky-80);
          top: 50%;
          transform: translate(-50%, -50%) scale(0.75);
          border-radius: value(border-radius);
          opacity: 0;
          transition: transform 0.3s ease-in-out;
        }
        &:hover::before {
          transform: translate(-50%, -50%) scale(1);
          opacity: 1;
        }
        &:focus {
          outline: none;
        }
        &:not(:hover):focus::before {
          transform: translate(-50%, -50%) scale(1);
          opacity: 1;
          background-color: var(--yellow-80);
        }
      }
      &-toggle {
        &:hover {
          background-color: var(--primary);
        }
        background-color: var(--secondary);

        position: fixed;
        top: calc(#{value(space)} / 4);
        right: calc(#{value(space)} / 4);
        z-index: 11;
        border-radius: value(border-radius);

        width: space(2);
        height: space(2);
        align-items: center;
        justify-content: center;

        display: flex;

        @media #{breakpoint(medium)} {
          display: none;
        }
        span {
          display: block;
          width: space();
          height: 2px;
          background-color: currentColor;
          position: relative;
          &::before,
          &::after {
            content: "";
            display: block;
            width: 100%;
            height: 100%;
            border-radius: inherit;
            background-color: inherit;
          }
          &::before {
            transform: translateY(-500%);
          }
          &::after {
            transform: translateY(400%);
          }
          &,
          &:before,
          &:after {
            transition: transform 0.3s;
          }
        }
      }
      &-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        pointer-events: none;
        background-color: var(--accent);
        opacity: 0;
        z-index: 5;
      }
      &-input {
        position: absolute;
        width: 0;
        height: 0;
        clip-path: inset(100% 100% 100% 100%);
        opacity: 0;

        & ~ #{$navigation},
        & ~ #{$header} #{$navigation} {
          @media #{breakpoint(small,only)} {
            --delay: 0.5s;
            position: fixed;
            flex-direction: column;
            background-color: inherit;
            top: 50%;
            left: 50%;
            padding: value(space);
            border: 2px solid var(--accent);
            border-radius: value(border-radius);
            align-items: center;
            justify-content: center;
            transform: translate(-50%, -100%) scale(0.5);
            transition: transform var(--timing, 0.3s) var(--delay, 0s)
                ease-in-out,
              opacity var(--timing, 0.3s) var(--delay, 0s) ease-in-out;
            opacity: 0;
            pointer-events: none;
            a {
              --delay: 0s;
              transition: transform var(--timing, 0.3s) var(--delay, 0s)
                  ease-in-out,
                opacity var(--timing, 0.3s) var(--delay, 0s) ease-in-out;
              transform: scale(0.5);
              opacity: 0;
            }
          }
        }
        &:checked {
          & ~ #{$navigation}-background {
            pointer-events: all;
            opacity: 0.75;
          }
          & + #{$navigation}-toggle {
            span {
              transform: rotate(45deg);
              &::before {
                transform: translateY(0%) rotate(-90deg);
              }
              &::after {
                transform: translateY(0%) rotate(90deg);
              }
            }
          }
          & ~ #{$navigation},
          & ~ #{$header} #{$navigation} {
            @media #{breakpoint(small,only)} {
              --delay: 0s;
              transform: translate(-50%, -50%) scale(1);
              opacity: 1;
              pointer-events: all;
              a {
                --delay: 0.5s;
                transform: scale(1);
                opacity: 1;
              }
            }
          }
        }
      }
    }
  }
}
