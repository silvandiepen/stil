@mixin darkMode {
  --off: var(--white-20);
  --off-text: var(--white-90);
  --foreground: var(--white);
  --foreground-accent: var(--white-90);
  --background: var(--white-10);
  --background-accent: var(--white-20);
  --text: var(--white);
  --accent: var(--light-accent);
}
@mixin lightMode {
  --off: var(--white-90);
  --off-text: var(--white-80);
  --foreground: var(--white-10);
  --foreground-accent: var(--white-20);
  --background: var(--white);
  --background-accent: var(--white-10);
  --text: var(--white-10);
  --accent: var(--dark-accent);
}

@mixin colormode() {
  @if export($output, "elements.colormode") {
    $colormode: settings($settings, "define.colormode.class");

    body {
      background-color: var(--background);
      color: var(--text);
    }
    @media (prefers-color-scheme: dark) {
      body {
        @include darkMode;
      }
    }

    @media (prefers-color-scheme: light) {
      body {
        @include lightMode;
      }
    }
    body[color-mode="dark"] {
      @include darkMode;
    }
    body[color-mode="light"] {
      @include lightMode;
    }

    #{$colormode} {
      --switch-stroke: calc(var(--space) * 0.1);
      --switch-color: var(--text, currentColor);
      border: var(--switch-stroke) solid var(--switch-color);
      width: calc(var(--space) * 1.5);
      height: var(--space);
      display: block;
      background-color: transparent;
      border-radius: var(--space);
      position: relative;
      text-indent: -999em;
      transition: opacity var(--transition);
      opacity: 0.5;
      &:hover {
        opacity: 1;
      }
      &:focus {
        outline: none;
        box-shadow: 0 0 10px 0 var(--primary);
      }
      &::before {
        --margin: calc((var(--switch-stroke) * 4));
        --dot-size: calc(var(--space) - var(--margin));
        content: "";
        display: block;
        position: absolute;
        left: 0;
        top: 50%;
        transition: transform 0.3s ease-in-out,
          background-position 0.3s ease-in-out, background-size 0.3s ease-in-out;
        transform: translate(calc(0% + var(--switch-stroke)), -50%);
        background-color: currentColor;
        border-radius: 50%;
        width: var(--dot-size);
        height: var(--dot-size);
        background: radial-gradient(
          circle at 50%,
          transparent,
          transparent 33.33%,
          var(--switch-color) 33.33%
        );

        background-repeat: no-repeat;
        background-size: calc(var(--space) * 2) 100%;
        background-position: -0% 50%;
      }
    }
    [color-mode="dark"] {
      #{$colormode}::before {
        transform: translate(calc(100%), -50%) rotate(180deg);
        background-position: 25% 50%;
      }
    }
  }
}
