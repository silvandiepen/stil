@mixin styled-content() {
  $parent: settings($settings, "content.block");
  @if export($output, "content.default") or
    export($output, "content.paragraphs")
  {
    #{$parent} {
      p {
        font-size: value(font-size, 1em);
        line-height: value(line-height, 1.5);
        max-width: value("content.paragraph.max-width");
        &:first-of-type {
          font-size: value(font-size-first, 1.25em);
        }
      }
    }
  }
  @if export($output, "content.default") or
    export($output, "content.blockquote")
  {
    #{$parent} {
      blockquote {
        font-family: inherit;
        font-size: value(font-size, 1em);
        line-height: value(line-height, 1.5);
        padding: value(space);
        line-height: value(line-height, 1.5);
      }
    }
  }
  @if export($output, "content.default") or export($output, "content.lists") {
    #{$parent} {
      ul:not([class]),
      ol:not([class]) {
        & + ol,
        & + ul {
          margin-top: 1em;
        }
        ul:not([class]),
        ol:not([class]) {
          padding-left: 1em;
        }
        li {
          line-height: value(line-height);
          font-size: value(font-size);
          &::before {
            padding-right: space() / 2;
          }
        }
      }
      ul:not([class]) {
        > li {
          &::before {
            content: "\2014";
          }
        }
      }
      ol:not([class]) {
        counter-reset: list;
        ol {
          counter-reset: sublist;
          > li {
            counter-increment: sublist;
            &::before {
              content: counter(list) "." counter(sublist) ".";
            }
            > ol {
              counter-reset: subsublist;
              > li {
                counter-increment: subsublist;
                &::before {
                  content: counter(list)
                    "."
                    counter(sublist)
                    "."
                    counter(subsublist)
                    ".";
                }
              }
            }
          }
        }
        > li {
          counter-increment: list;
          &::before {
            font-variant-numeric: tabular-nums;
            content: counter(list) ".";
          }
        }
      }
    }
  }

  @if export($output, "content.default") or export($output, "content.table") {
    #{$parent} {
      table {
        width: calc(100% + (#{value(space)} * 1));
        margin-left: calc((#{value(space)} / 2) * -1);

        &.middle {
          th,
          td {
            vertical-align: middle;
          }
        }
        th,
        td {
          text-align: left;
          padding: calc(#{value(space)} / 2);
        }
        th {
          font-weight: value(text-bold, bold);
        }
        @media #{breakpoint(small,only)} {
          &.wrap {
            tr {
              display: flex;
              flex-direction: column;
              flex-wrap: wrap;
              th,
              td {
                display: block;
              }
            }
          }
        }
      }
    }
  }
}
